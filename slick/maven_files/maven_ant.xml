<!--
  The ant stub calls for Maven to do certain things that Maven is bad at.
  
  Such as:
		Creating webstarts
		Signing JARs and webstarts
-->
<project name="slick" default="maven" basedir="" xmlns:artifact="urn:maven-artifact-ant">

<typedef resource="org/jdesktop/deployment/ant/pack200/antlib.xml" classpath="${ant.dir}/Pack200Task.jar"/>

<target name="maven">
<antcall target="build-webstart-libs"/>
<antcall target="build-test-webstarts"/>

</target>

<target name="build-webstart-pedigree">
	<input message="KeyStore Password, a password:" addproperty="keystore.password"/>
	
	<copyandsign jar="pedigree"/>
	<createdemojnlp name="pedigree" title="Slick2D Pedigree, Whiskas flavoured" mainclass="org.newdawn.ParticleEditor"/>
</target>

<target name="build-webstart-hiero">
	<input message="KeyStore Password, a password:" addproperty="keystore.password"/>
	
	<copyandsign jar="hiero"/>
	<createdemojnlp name="hiero" title="Slick2D Hiero Bitmap Font Generator" mainclass="org.newdawn.Hiero"/>
</target>

<target name="build-webstart-scalar">
	<input message="KeyStore Password, a password:" addproperty="keystore.password"/>
	
	<copyandsign jar="scalar"/>
	<createdemojnlp name="scalar" title="Slick2D Scalar Scale2/3X Tool" mainclass="org.newdawn.Scalar"/>
</target>

<target name="build-webstart-packer">
	<input message="KeyStore Password, a password:" addproperty="keystore.password"/>
	
	<copyandsign jar="packulike"/>
	<createdemojnlp name="packer" title="Slick2D Sprite Packer" mainclass="org.newdawn.Packer"/>
</target>

<target name="check-key-store">
	<available file="${keystore.dir}/${keystore.alias}.ks" property="keystoreAlreadyExists" />	
	<antcall target="build-key-store"/>
</target>

<!--
 Create a keystore to use when signing your own games
-->
<target name="build-key-store" unless="keystoreAlreadyExists">
	<input message="KeyStore Password, a password:" addproperty="keystore.password">
		<handler classname="org.apache.tools.ant.input.SecureInputHandler" /> 
	</input>
	<input message="KeyStore Name, your name:" addproperty="keystore.name"/>
	<input message="KeyStore Company, your development group or company:" addproperty="keystore.company"/>
		
	<genkey keystore="${keystore.dir}/${keystore.alias}.ks" alias="${keystore.alias}" storepass="${keystore.password}" >
		<dname>
			<param name="CN"	value="${keystore.name}"/>
			<param name="OU"	value="${keystore.company}"/>
		</dname>
	</genkey>
</target>

<!--
 Package and sign the libraries require for a webstart distribution of Slick
-->
<target name="build-webstart-libs">	
	<input message="KeyStore Password, a password:" addproperty="keystore.password">
		<handler classname="org.apache.tools.ant.input.SecureInputHandler" /> 
	</input>
	<copyandsign jar="ibxm"/>
	<copyandsign jar="lwjgl"/>
	<copyandsign jar="jogg"/>
	<copyandsign jar="jinput"/>
	<copyandsign jar="jorbis"/>
	<copyandsignres jar="natives-linux"/>
	<copyandsignres jar="natives-windows"/>
	<copyandsignres jar="natives-mac"/>
	<copyandsignres jar="testdata"/>
	<copyandsign jar="slick"/>
	<copyandsign jar="slick-examples"/>
</target>

<!--
 Sign a single jar - useful for your game specific jars
-->
<target name="sign-a-jar" depends="check-key-store">

	<input message="KeyStore Password, a password:" addproperty="keystore.password">
		<handler classname="org.apache.tools.ant.input.SecureInputHandler" /> 
	</input>
	<input message="Jar Location" addproperty="jar"/>
	
	<signjar jar="${jar}" keystore="${keystore.dir}/${keystore.alias}.ks" storepass="${keystore.password}" alias="${keystore.alias}"/> 
</target>

<!--
 Generate and package the JNLP and HTML files for the Slick webstart demos
-->
<target name="build-test-webstarts" depends="check-key-store">
	
	<input message="KeyStore Password, a password:" addproperty="keystore.password">
		<handler classname="org.apache.tools.ant.input.SecureInputHandler" /> 
	</input>
	
	<signjar jar="${webstart.dir}/testdata.jar" keystore="${keystore.dir}/${keystore.alias}.ks" storepass="${keystore.password}" alias="${keystore.alias}"/>
	<signjar jar="${webstart.dir}/natives-windows.jar" keystore="${keystore.dir}/${keystore.alias}.ks" storepass="${keystore.password}" alias="${keystore.alias}"/> 
	<signjar jar="${webstart.dir}/natives-mac.jar" keystore="${keystore.dir}/${keystore.alias}.ks" storepass="${keystore.password}" alias="${keystore.alias}"/> 
	<signjar jar="${webstart.dir}/natives-linux.jar" keystore="${keystore.dir}/${keystore.alias}.ks" storepass="${keystore.password}" alias="${keystore.alias}"/> 
	
	<echo file="${webstart.dir}/demos.txt">VERSION|0.4.8|SUBJECT|Webstart Demos|CONTENT|[html]</echo>	 
	
	<createdemojnlp name="imagetest" title="Slick2D Image Test" mainclass="org.newdawn.slick.tests.ImageTest"/>
	<createdemojnlp name="fonttest" title="Slick2D Font Test" mainclass="org.newdawn.slick.tests.FontTest"/>
	<createdemojnlp name="inputtest" title="Slick2D Input Test" mainclass="org.newdawn.slick.tests.InputTest"/>
	<createdemojnlp name="soundtest" title="Slick2D Sound Test" mainclass="org.newdawn.slick.tests.SoundTest"/>
	<createdemojnlp name="animationtest" title="Slick2D Animation Test" mainclass="org.newdawn.slick.tests.AnimationTest"/>
	<createdemojnlp name="graphicstest" title="Slick2D Graphics Test" mainclass="org.newdawn.slick.tests.GraphicsTest"/>
	<createdemojnlp name="geomtest" title="Slick2D Geom Test" mainclass="org.newdawn.slick.tests.GeomTest"/>
	<createdemojnlp name="tilemaptest" title="Slick2D TileMap Test" mainclass="org.newdawn.slick.tests.TileMapTest"/>
	
	<createdemojnlp name="particletest" title="Slick2D Particle Test" mainclass="org.newdawn.slick.tests.ParticleTest"/>
	<createdemojnlp name="duplicateemittertest" title="Slick2D Duplicate Emitter Test" mainclass="org.newdawn.slick.tests.DuplicateEmitterTest"/>
	<createdemojnlp name="transformtest" title="Slick2D Transform Test" mainclass="org.newdawn.slick.tests.TransformTest"/>	
	<createdemojnlp name="statebasedtest" title="Slick2D StateBasedGame Test" mainclass="org.newdawn.slick.tests.StateBasedTest"/>

	<createdemojnlp name="guitest" title="Slick2D GUI Test" mainclass="org.newdawn.slick.tests.GUITest"/>
	<createdemojnlp name="packedtest" title="Slick2D Packed Sprite Sheet Test" mainclass="org.newdawn.slick.tests.PackedSheetTest"/>

	<createdemojnlp name="storedstatetest" title="Slick2D Stored State Test" mainclass="org.newdawn.slick.tests.SavedStateTest"/>
	<createdemojnlp name="pedigreetest" title="Slick2D Pedigree Test" mainclass="org.newdawn.slick.tests.PedigreeTest"/>
	<createdemojnlp name="flashtest" title="Slick2D Flash Test" mainclass="org.newdawn.slick.tests.FlashTest"/>
	<createdemojnlp name="deferredtest" title="Slick2D Deferred Test" mainclass="org.newdawn.slick.tests.DeferredLoadingTest"/>

	<createdemojnlp name="spritesheetfonttest" title="Slick2D Sprite Sheet Font Test" mainclass="org.newdawn.slick.tests.SpriteSheetFontTest"/>
	<createdemojnlp name="transparentcolortest" title="Slick2D Transparent Color Test" mainclass="org.newdawn.slick.tests.TransparentColorTest"/>
	<createdemojnlp name="polygontest" title="Slick2D Polygon Point Test" mainclass="org.newdawn.slick.tests.PolygonTest"/>

	<createdemojnlp name="purefonttest" title="Slick2D Pure Font Test" mainclass="org.newdawn.slick.tests.PureFontTest"/>
	<createdemojnlp name="canvastest" title="Slick2D Canvas Container Test" mainclass="org.newdawn.slick.tests.CanvasContainerTest"/>
	<createdemojnlp name="antialiastest" title="Slick2D Anti-Alias Test" mainclass="org.newdawn.slick.tests.AntiAliasTest"/>

	<createdemojnlp name="offscreen" title="Slick2D Offscreen Rendering Test" mainclass="org.newdawn.slick.tests.ImageGraphicsTest"/>
	<createdemojnlp name="clip" title="Slick2D Clipping Test" mainclass="org.newdawn.slick.tests.ClipTest"/>
	<createdemojnlp name="imagereadtest" title="Slick2D Image Read Test" mainclass="org.newdawn.slick.tests.ImageReadTest"/>
	<createdemojnlp name="bigimagetest" title="Slick2D Big Image Test" mainclass="org.newdawn.slick.tests.BigImageTest"/>
	<createdemojnlp name="slickcallable" title="Slick2D Callables" mainclass="org.newdawn.slick.tests.SlickCallableTest"/>
	<createdemojnlp name="keyrepeat" title="Slick2D Key Repeat" mainclass="org.newdawn.slick.tests.KeyRepeatTest"/>
	<createdemojnlp name="musiclistener" title="Slick2D Music Listener" mainclass="org.newdawn.slick.tests.MusicListenerTest"/>
	<createdemojnlp name="gradient" title="Slick2D Gradients" mainclass="org.newdawn.slick.tests.GradientTest"/>
	<createdemojnlp name="transition" title="Slick2D Transitions" mainclass="org.newdawn.slick.tests.TransitionTest"/>
	
	<!-- Examples under here please -->
	<createdemojnlp template="slickexample.jnlp" name="scroller" title="Slick2D TileMap Scroll Example" mainclass="org.newdawn.scroller.Scroller"/>

	<echo file="${webstart.dir}/demos.txt" append="true">[/html]|DATE|1162965600</echo>	 
</target>

<!--
 A macro to copy and sign a library for webstart distribution
-->
<macrodef name="copyandsign">
   <attribute name="jar" default="NOT SET"/>
   <sequential>
		<antcall target="check-key-store"/>
		<copy file="${output.dir}/@{jar}.jar" toDir="${webstart.dir}/"/>
		<signjar jar="${webstart.dir}/@{jar}.jar" keystore="${keystore.dir}/${keystore.alias}.ks" storepass="${keystore.password}" alias="${keystore.alias}"/> 
		<copy file="${output.dir}/@{jar}.jar" toDir="${output.dir}/lzma"/>
		<antcall target="compress-sign-class">
			<param name="dir" value="${output.dir}/lzma/"/>
			<param name="jarfile" value="@{jar}"/>
		</antcall>
   </sequential>
</macrodef>

<macrodef name="copyandsignres">
	<attribute name="jar" default="NOT SET"/>
	<sequential>
		<antcall target="check-key-store"/>
		<copy file="${output.dir}/@{jar}.jar" toDir="${webstart.dir}/"/>
		<signjar jar="${webstart.dir}/@{jar}.jar" keystore="${keystore.dir}/${keystore.alias}.ks" storepass="${keystore.password}" alias="${keystore.alias}"/> 
		<copy file="${output.dir}/@{jar}.jar" toDir="${output.dir}/lzma"/>
		<antcall target="compress-resource">
			<param name="dir" value="${output.dir}/lzma/"/>
			<param name="jarfile" value="@{jar}"/>
		</antcall>
	</sequential>
</macrodef>

<!--
 A macro to copy and preprocess the JNLP template for all webstart demos
-->
<macrodef name="createdemojnlp">
	<attribute name="name" default="NOT SET"/>
	<attribute name="title" default="NOT SET"/>
	<attribute name="mainclass" default="NOT SET"/>
	<attribute name="template" default="slickdemo.jnlp"/>
	<attribute name="datajar" default="testdata.jar"/>
	<attribute name="projectjar" default=""/>
	<sequential>
		<delete file="${webstart.dir}/@{name}.jnlp"/>
		<copy file="${ant.dir}/@{template}" toFile="${webstart.dir}/@{name}.jnlp">
			<filterchain>
			   <replacetokens>
					<token key="title" value="@{title}"/>
					<token key="mainclass" value="@{mainclass}"/>
					<token key="jnlpname" value="@{name}.jnlp"/>
					<token key="homepage" value="http:/slick.cokeandcode.com"/>
					<token key="datajar" value="@{datajar}"/>
					<token key="projectjar" value="@{projectjar}"/>
					<token key="vendor" value="Slick 2D"/>
					<token key="codebase" value="http:/slick.cokeandcode.com/demos"/>
				</replacetokens>
			</filterchain>
		</copy>
		
		<echo file="${webstart.dir}/demos.txt" append="true">
			&lt;a href="http:/slick.cokeandcode.com/demos/@{name}.jnlp"&gt; @{title} &lt;/a&gt;
			&lt;br/&gt;
		</echo>	 
	</sequential>
</macrodef>

<target name="repack200" description="Pack200-repack a jar file">
	<pack200 src="${input}" destfile="${output}" repack="true"/>
</target>

<target name="pack200" description="Pack200 a jar file">
	<pack200 src="${input}" destfile="${output}"/>
</target>
  
<target name="lzma" description="LZMA compress a file" depends="check-key-store">
	<java fork="true" classname="SevenZip.LzmaAlone">
		<classpath>
		<pathelement location="${ant.dir}/JLzma.jar"/>
	</classpath>
	<jvmarg value="-Xmx512m"/>
	<arg value="e"/>
	<arg value="${input}"/>
	<arg value="${output}"/>
		</java>
	</target>
	
	<target name="compress-sign-class">
		<antcall target="repack200">
			<param name="input" value="${output.dir}/${jarfile}.jar"/>
			<param name="output" value="${output.dir}/lzma/${jarfile}-repack.jar"/>
		</antcall>
		<signjar jar="${output.dir}/${jarfile}-repack.jar" keystore="${keystore.dir}/${keystore.alias}.ks" storepass="${keystore.password}" alias="${keystore.alias}"/>
		<antcall target="pack200">
			<param name="input" value="${output.dir}/lzma/${jarfile}-repack.jar"/>
			<param name="output" value="${output.dir}/lzma/${jarfile}.jar.pack"/>
		</antcall>
		<antcall target="lzma">
			<param name="input" value="${output.dir}/lzma/${jarfile}.jar.pack"/>
			<param name="output" value="${output.dir}/lzma/${jarfile}.jar.pack.lzma"/>
		</antcall>
		<delete file="${output.dir}/lzma/${jarfile}-repack.jar"/>
		<delete file="${output.dir}/lzma/${jarfile}.jar.pack"/>
		<delete file="${output.dir}/lzma/${jarfile}.jar"/>
	</target>
  
	<target name="compress-resource">
		<antcall target="lzma">
			<param name="input" value="${jarfile}.jar"/>
			<param name="output" value="${output.dir}/lzma/${jarfile}.jar.lzma"/>
		</antcall>
	</target>
  
</project>
